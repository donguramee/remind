{"ast":null,"code":"var _jsxFileName = \"/Users/dongura_me/Desktop/dongurame-remind/remind/react/final-project/final-09-campick/src/pages/viewPost/ViewPost.jsx\",\n  _s = $RefreshSig$();\nimport { Helmet } from \"react-helmet-async\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PostItem from \"../../components/post/PostItem\";\nimport Comment from \"../../components/comment/Comment\";\nimport HeaderText from \"../../components/header/HeaderText\";\nimport { CommentSection, WrapViewPost, CommentUploadButton, WrapCommentWrite, CommentProfileImage, CommentInputArea } from \"../viewPost/ViewPost.style\";\nimport { viewPost } from \"../../api/viewpostApi\";\nimport { myInfo } from \"../../api/myInfoApi\";\nimport { uploadComment, getCommentList } from \"../../api/commentApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ViewPost() {\n  _s();\n  const {\n    post_id\n  } = useParams();\n  const [data, setPostData] = useState(null);\n  const [commentContent, setCommentContent] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [myProfilePic, setMyProfilePic] = useState(\"\");\n  const [myAccountName, setMyAccountName] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const [commentCount, setCommentCount] = useState(0);\n  const [lender, setLender] = useState(true);\n  const loadMyInfo = async () => {\n    try {\n      const getMyInfo = await myInfo();\n      setMyProfilePic(getMyInfo.image);\n      setMyAccountName(getMyInfo.accountname);\n    } catch (error) {\n      console.error(\"오류 발생\", error);\n      throw error;\n    }\n  };\n  const handlecommentContentChange = e => {\n    const value = e.target.value;\n    setCommentContent(value);\n    setIsActive(value.length > 0);\n  };\n  const handleCommentUpload = async () => {\n    if (!isActive || isUploading) return;\n    setIsUploading(true); // 업로드 시작\n\n    try {\n      const response = await uploadComment(post_id, commentContent);\n      if (response && response.comment) {\n        setComments(prevComments => [response.comment, ...prevComments]);\n        setCommentContent(\"\"); // 입력창 초기화\n        setCommentCount(prevCount => prevCount + 1);\n      }\n    } catch (error) {\n      console.error(\"댓글 업로드 실패: \", error);\n    } finally {\n      setIsUploading(false); // 업로드 종료\n    }\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleCommentUpload();\n    }\n  };\n  useEffect(() => {\n    loadMyInfo();\n  }, []);\n  useEffect(() => {\n    const getPostAndComments = async () => {\n      try {\n        const fetchedPost = await viewPost(post_id);\n        setPostData(fetchedPost);\n        setCommentCount(fetchedPost.commentCount);\n        const fetchedComments = await getCommentList(post_id);\n        setComments(fetchedComments);\n      } catch (error) {\n        console.error(\"error\", error);\n      }\n    };\n    getPostAndComments();\n  }, [post_id, lender]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Campic | \\uAC8C\\uC2DC\\uAE00 \\uC0C1\\uC138\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeaderText, {\n      text: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WrapViewPost, {\n      children: [data && /*#__PURE__*/_jsxDEV(PostItem, {\n        data: data,\n        commentCount: commentCount,\n        location: data && JSON.parse(data.content).location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n        children: comments && [...comments].map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: comment,\n          currentUsername: myAccountName,\n          postId: post_id,\n          setLender: setLender\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WrapCommentWrite, {\n        children: [/*#__PURE__*/_jsxDEV(CommentProfileImage, {\n          src: myProfilePic,\n          alt: `${myAccountName}의 프로필 이미지입니다.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentInputArea, {\n          value: commentContent,\n          onChange: handlecommentContentChange,\n          onKeyDown: handleKeyDown,\n          placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentUploadButton, {\n          onClick: handleCommentUpload,\n          disabled: !commentContent.trim(),\n          children: \"\\uAC8C\\uC2DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ViewPost, \"HqeRXNJGP8fkl/Q9oRbpp8tN1nI=\", false, function () {\n  return [useParams];\n});\n_c = ViewPost;\nvar _c;\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"names":["Helmet","React","useState","useEffect","useParams","PostItem","Comment","HeaderText","CommentSection","WrapViewPost","CommentUploadButton","WrapCommentWrite","CommentProfileImage","CommentInputArea","viewPost","myInfo","uploadComment","getCommentList","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewPost","_s","post_id","data","setPostData","commentContent","setCommentContent","isActive","setIsActive","comments","setComments","myProfilePic","setMyProfilePic","myAccountName","setMyAccountName","isUploading","setIsUploading","commentCount","setCommentCount","lender","setLender","loadMyInfo","getMyInfo","image","accountname","error","console","handlecommentContentChange","e","value","target","length","handleCommentUpload","response","comment","prevComments","prevCount","handleKeyDown","key","shiftKey","preventDefault","getPostAndComments","fetchedPost","fetchedComments","children","fileName","_jsxFileName","lineNumber","columnNumber","text","location","JSON","parse","content","map","currentUsername","postId","id","src","alt","onChange","onKeyDown","placeholder","onClick","disabled","trim","_c","$RefreshReg$"],"sources":["/Users/dongura_me/Desktop/dongurame-remind/remind/react/final-project/final-09-campick/src/pages/viewPost/ViewPost.jsx"],"sourcesContent":["import { Helmet } from \"react-helmet-async\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PostItem from \"../../components/post/PostItem\";\nimport Comment from \"../../components/comment/Comment\";\nimport HeaderText from \"../../components/header/HeaderText\";\nimport {\n  CommentSection,\n  WrapViewPost,\n  CommentUploadButton,\n  WrapCommentWrite,\n  CommentProfileImage,\n  CommentInputArea,\n} from \"../viewPost/ViewPost.style\";\nimport { viewPost } from \"../../api/viewpostApi\";\nimport { myInfo } from \"../../api/myInfoApi\";\nimport { uploadComment, getCommentList } from \"../../api/commentApi\";\n\nexport default function ViewPost() {\n  const { post_id } = useParams();\n  const [data, setPostData] = useState(null);\n  const [commentContent, setCommentContent] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [myProfilePic, setMyProfilePic] = useState(\"\");\n  const [myAccountName, setMyAccountName] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const [commentCount, setCommentCount] = useState(0);\n  const [lender, setLender] = useState(true);\n  const loadMyInfo = async () => {\n    try {\n      const getMyInfo = await myInfo();\n      setMyProfilePic(getMyInfo.image);\n      setMyAccountName(getMyInfo.accountname);\n    } catch (error) {\n      console.error(\"오류 발생\", error);\n      throw error;\n    }\n  };\n\n  const handlecommentContentChange = e => {\n    const value = e.target.value;\n    setCommentContent(value);\n    setIsActive(value.length > 0);\n  };\n\n  const handleCommentUpload = async () => {\n    if (!isActive || isUploading) return;\n    setIsUploading(true); // 업로드 시작\n\n    try {\n      const response = await uploadComment(post_id, commentContent);\n\n      if (response && response.comment) {\n        setComments(prevComments => [response.comment, ...prevComments]);\n        setCommentContent(\"\"); // 입력창 초기화\n        setCommentCount(prevCount => prevCount + 1);\n      }\n    } catch (error) {\n      console.error(\"댓글 업로드 실패: \", error);\n    } finally {\n      setIsUploading(false); // 업로드 종료\n    }\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleCommentUpload();\n    }\n  };\n\n  useEffect(() => {\n    loadMyInfo();\n  }, []);\n\n  useEffect(() => {\n    const getPostAndComments = async () => {\n      try {\n        const fetchedPost = await viewPost(post_id);\n        setPostData(fetchedPost);\n        setCommentCount(fetchedPost.commentCount);\n\n        const fetchedComments = await getCommentList(post_id);\n        setComments(fetchedComments);\n      } catch (error) {\n        console.error(\"error\", error);\n      }\n    };\n    getPostAndComments();\n  }, [post_id, lender]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Campic | 게시글 상세</title>\n      </Helmet>\n      <HeaderText text={\"\"} />\n      <WrapViewPost>\n        {data && (\n          <PostItem\n            data={data}\n            commentCount={commentCount}\n            location={data && JSON.parse(data.content).location}\n          />\n        )}\n        <CommentSection>\n          {comments &&\n            [...comments].map(comment => (\n              <Comment\n                key={comment.id}\n                comment={comment}\n                currentUsername={myAccountName}\n                postId={post_id}\n                setLender={setLender}\n              />\n            ))}\n        </CommentSection>\n\n        <WrapCommentWrite>\n          <CommentProfileImage\n            src={myProfilePic}\n            alt={`${myAccountName}의 프로필 이미지입니다.`}\n          />\n          <CommentInputArea\n            value={commentContent}\n            onChange={handlecommentContentChange}\n            onKeyDown={handleKeyDown}\n            placeholder=\"댓글을 입력하세요...\"\n          />\n          <CommentUploadButton\n            onClick={handleCommentUpload}\n            disabled={!commentContent.trim()}\n          >\n            게시\n          </CommentUploadButton>\n        </WrapCommentWrite>\n      </WrapViewPost>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}