{"ast":null,"code":"var _jsxFileName = \"/Users/dongura_me/Desktop/dongurame-remind/remind/react/final-project/final-09-campick/src/pages/loginEmail/LoginEmail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SignUpContainer, WrapperLoginEmail } from \"./LoginEmail.style\";\nimport { Incorrect, InputStyle, LabelStyle, Submitbutton, Title, WrapEmailPw, WrapForm } from \"../../components/form/Form.style\";\nimport { login } from \"../../api/loginApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginEmail() {\n  _s();\n  const [emailValid, setEmailValid] = useState(false);\n  const [validEmail, setValidEmail] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [testAccount, setTestAccount] = useState(false); // 체크박스 상태를 저장하는 상태 추가\n  const [correct, setCorrect] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const navigate = useNavigate();\n  const [typingTimer, setTypingTimer] = useState(null); // 입력 지연 타이머 상태 추가\n  const emailPattern = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+\\.(com|net)$/;\n  useEffect(() => {\n    setDisabled(!(emailValid && pw.length >= 6) && !testAccount); //이메일과 패스워드가 작성되거나 체크박스가 체크(인풋창 비활성화)되면 로그인 버튼 활성화\n  }, [emailValid, pw, testAccount]);\n  function validation(e) {\n    const emailValue = e.target.value;\n    const pwValue = e.target.value;\n    if (typingTimer) {\n      clearTimeout(typingTimer); // 타이핑 중인 타이머가 있으면 클리어\n    }\n\n    if (e.target.id === \"user-email\") {\n      setEmail(emailValue);\n      setEmailValid(emailPattern.test(emailValue));\n      if (!emailValue) {\n        setValidEmail(false); // 입력 값이 비어있으면 유효하지 않은 이메일 형식 메시지를 비활성화\n      } else if (!emailPattern.test(emailValue)) {\n        const timer = setTimeout(() => {\n          setValidEmail(true);\n        }, 300);\n        setTypingTimer(timer);\n      } else {\n        setValidEmail(false);\n      }\n    }\n    if (e.target.id === \"user-pw\") {\n      setPw(pwValue);\n    }\n  }\n  async function userLogin(e) {\n    e.preventDefault();\n    const res = await login(email, pw);\n    if (res && res.hasOwnProperty(\"user\")) {\n      localStorage.setItem(\"token\", res.user.token);\n      localStorage.setItem(\"accountname\", res.user.accountname);\n      navigate(\"/homefeed\"); // 로그인 성공하면 홈화면으로 가기\n    } else {\n      setCorrect(true);\n    }\n  }\n\n  //체험하기 함수\n  const handleCheckboxClick = () => {\n    if (!testAccount) {\n      setEmail(\"campick09@naver.com\");\n      setPw(\"123123\");\n      setValidEmail(false);\n    } else {\n      setEmail(\"\");\n      setPw(\"\");\n    }\n    setTestAccount(!testAccount); // 체크 상태 업데이트\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Campick | \\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WrapperLoginEmail, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WrapForm, {\n        onSubmit: userLogin,\n        children: [/*#__PURE__*/_jsxDEV(WrapEmailPw, {\n          children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n            htmlFor: \"user-email\",\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputStyle, {\n            id: \"user-email\",\n            type: \"email\",\n            value: email,\n            onChange: validation,\n            required: true,\n            disabled: testAccount //체크박스 체크시 인풋 비활성화\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), validEmail && /*#__PURE__*/_jsxDEV(Incorrect, {\n            children: \"* \\uC798\\uBABB\\uB41C \\uC774\\uBA54\\uC77C \\uD615\\uC2DD\\uC785\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WrapEmailPw, {\n          children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n            htmlFor: \"user-pw\",\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputStyle, {\n            id: \"user-pw\",\n            type: \"password\",\n            value: pw,\n            onChange: validation,\n            required: true,\n            disabled: testAccount //체크박스 체크시 인풋 비활성화\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), correct && /*#__PURE__*/_jsxDEV(Incorrect, {\n            children: \"*\\uC774\\uBA54\\uC77C \\uB610\\uB294 \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LabelStyle, {\n            children: [/*#__PURE__*/_jsxDEV(InputStyle, {\n              type: \"checkbox\",\n              checked: testAccount,\n              onClick: handleCheckboxClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), \"\\uCEA0\\uD53D \\uCCB4\\uD5D8\\uD574\\uBCF4\\uAE30\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Submitbutton, {\n            disabled: disabled,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignUpContainer, {\n        to: \"/account/signup\",\n        children: \"\\uC774\\uBA54\\uC77C\\uB85C \\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginEmail, \"qOJctHmxY3iIvPiX5yO8I5zM878=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginEmail;\nvar _c;\n$RefreshReg$(_c, \"LoginEmail\");","map":{"version":3,"names":["React","useState","useEffect","Helmet","useNavigate","SignUpContainer","WrapperLoginEmail","Incorrect","InputStyle","LabelStyle","Submitbutton","Title","WrapEmailPw","WrapForm","login","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginEmail","_s","emailValid","setEmailValid","validEmail","setValidEmail","email","setEmail","pw","setPw","testAccount","setTestAccount","correct","setCorrect","disabled","setDisabled","navigate","typingTimer","setTypingTimer","emailPattern","length","validation","e","emailValue","target","value","pwValue","clearTimeout","id","test","timer","setTimeout","userLogin","preventDefault","res","hasOwnProperty","localStorage","setItem","user","token","accountname","handleCheckboxClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","checked","onClick","to","_c","$RefreshReg$"],"sources":["/Users/dongura_me/Desktop/dongurame-remind/remind/react/final-project/final-09-campick/src/pages/loginEmail/LoginEmail.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { SignUpContainer, WrapperLoginEmail } from \"./LoginEmail.style\";\nimport {\n  Incorrect,\n  InputStyle,\n  LabelStyle,\n  Submitbutton,\n  Title,\n  WrapEmailPw,\n  WrapForm,\n} from \"../../components/form/Form.style\";\n\nimport { login } from \"../../api/loginApi\";\n\nexport default function LoginEmail() {\n  const [emailValid, setEmailValid] = useState(false);\n  const [validEmail, setValidEmail] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [testAccount, setTestAccount] = useState(false); // 체크박스 상태를 저장하는 상태 추가\n  const [correct, setCorrect] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const navigate = useNavigate();\n  const [typingTimer, setTypingTimer] = useState(null); // 입력 지연 타이머 상태 추가\n  const emailPattern = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+\\.(com|net)$/;\n\n  useEffect(() => {\n    setDisabled(!(emailValid && pw.length >= 6) && !testAccount); //이메일과 패스워드가 작성되거나 체크박스가 체크(인풋창 비활성화)되면 로그인 버튼 활성화\n  }, [emailValid, pw, testAccount]);\n\n  function validation(e) {\n    const emailValue = e.target.value;\n    const pwValue = e.target.value;\n    if (typingTimer) {\n      clearTimeout(typingTimer); // 타이핑 중인 타이머가 있으면 클리어\n    }\n    if (e.target.id === \"user-email\") {\n      setEmail(emailValue);\n      setEmailValid(emailPattern.test(emailValue));\n\n      if (!emailValue) {\n        setValidEmail(false); // 입력 값이 비어있으면 유효하지 않은 이메일 형식 메시지를 비활성화\n      } else if (!emailPattern.test(emailValue)) {\n        const timer = setTimeout(() => {\n          setValidEmail(true);\n        }, 300);\n        setTypingTimer(timer);\n      } else {\n        setValidEmail(false);\n      }\n    }\n    if (e.target.id === \"user-pw\") {\n      setPw(pwValue);\n    }\n  }\n\n  async function userLogin(e) {\n    e.preventDefault();\n\n    const res = await login(email, pw);\n    if (res && res.hasOwnProperty(\"user\")) {\n      localStorage.setItem(\"token\", res.user.token);\n      localStorage.setItem(\"accountname\", res.user.accountname);\n\n      navigate(\"/homefeed\"); // 로그인 성공하면 홈화면으로 가기\n    } else {\n      setCorrect(true);\n    }\n  }\n\n  //체험하기 함수\n  const handleCheckboxClick = () => {\n    if (!testAccount) {\n      setEmail(\"campick09@naver.com\");\n      setPw(\"123123\");\n      setValidEmail(false);\n    } else {\n      setEmail(\"\");\n      setPw(\"\");\n    }\n    setTestAccount(!testAccount); // 체크 상태 업데이트\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Campick | 로그인</title>\n      </Helmet>\n      <WrapperLoginEmail>\n        <Title>로그인</Title>\n        <WrapForm onSubmit={userLogin}>\n          <WrapEmailPw>\n            <LabelStyle htmlFor=\"user-email\">이메일</LabelStyle>\n            <InputStyle\n              id=\"user-email\"\n              type=\"email\"\n              value={email}\n              onChange={validation}\n              required\n              disabled={testAccount} //체크박스 체크시 인풋 비활성화\n            />\n            {validEmail && <Incorrect>* 잘못된 이메일 형식입니다.</Incorrect>}\n          </WrapEmailPw>\n          <WrapEmailPw>\n            <LabelStyle htmlFor=\"user-pw\">비밀번호</LabelStyle>\n            <InputStyle\n              id=\"user-pw\"\n              type=\"password\"\n              value={pw}\n              onChange={validation}\n              required\n              disabled={testAccount} //체크박스 체크시 인풋 비활성화\n            />\n            {correct && (\n              <Incorrect>*이메일 또는 비밀번호가 일치하지 않습니다.</Incorrect>\n            )}\n            <LabelStyle>\n              <InputStyle\n                type=\"checkbox\"\n                checked={testAccount}\n                onClick={handleCheckboxClick}\n              />\n              캠픽 체험해보기\n            </LabelStyle>\n            <Submitbutton disabled={disabled}>로그인</Submitbutton>\n          </WrapEmailPw>\n        </WrapForm>\n        <SignUpContainer to={\"/account/signup\"}>\n          이메일로 회원가입\n        </SignUpContainer>\n      </WrapperLoginEmail>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}