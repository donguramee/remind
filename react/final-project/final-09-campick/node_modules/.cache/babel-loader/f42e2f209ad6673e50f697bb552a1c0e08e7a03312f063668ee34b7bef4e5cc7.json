{"ast":null,"code":"export const campsiteregister = async (companyName, location, labels, price, link, image) => {\n  const baseUrl = \"https://api.mandarin.weniv.co.kr\";\n  const reqPath = \"/product\";\n  const reqUrl = baseUrl + reqPath;\n  const item = {\n    name: companyName,\n    location: location,\n    labels: labels\n  };\n  // location이랑 label도 api에 전달을 해야하는데 명세에 이 내용이 없으니까.\n  // item이라는 obj를 만들어서 json으로 변환 후 전달.\n  // 다시 써야할때도 json -> obj 가공해서 써야함.\n\n  const productData = {\n    product: {\n      itemName: JSON.stringify(item),\n      price: price,\n      link: link,\n      itemImage: image\n    }\n  };\n  try {\n    const res = await fetch(reqUrl, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(productData)\n    });\n    const json = await res.json();\n    return json;\n  } catch (error) {\n    console.error(\"API 응답에 실패하였습니다.\", error);\n  }\n};","map":{"version":3,"names":["campsiteregister","companyName","location","labels","price","link","image","baseUrl","reqPath","reqUrl","item","name","productData","product","itemName","JSON","stringify","itemImage","res","fetch","method","headers","Authorization","localStorage","getItem","body","json","error","console"],"sources":["/Users/dongura_me/Desktop/dongurame-remind/remind/react/final-project/final-09-campick/src/api/campsiteregisterApi.js"],"sourcesContent":["export const campsiteregister = async (\n  companyName,\n  location,\n  labels,\n  price,\n  link,\n  image,\n) => {\n  const baseUrl = \"https://api.mandarin.weniv.co.kr\";\n  const reqPath = \"/product\";\n  const reqUrl = baseUrl + reqPath;\n  const item = {\n    name: companyName,\n    location: location,\n    labels: labels,\n  };\n  // location이랑 label도 api에 전달을 해야하는데 명세에 이 내용이 없으니까.\n  // item이라는 obj를 만들어서 json으로 변환 후 전달.\n  // 다시 써야할때도 json -> obj 가공해서 써야함.\n\n  const productData = {\n    product: {\n      itemName: JSON.stringify(item),\n      price: price,\n      link: link,\n      itemImage: image,\n    },\n  };\n\n  try {\n    const res = await fetch(reqUrl, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(productData),\n    });\n    const json = await res.json();\n\n    return json;\n  } catch (error) {\n    console.error(\"API 응답에 실패하였습니다.\", error);\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAAA,CAC9BC,WAAW,EACXC,QAAQ,EACRC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJC,KAAK,KACF;EACH,MAAMC,OAAO,GAAG,kCAAkC;EAClD,MAAMC,OAAO,GAAG,UAAU;EAC1B,MAAMC,MAAM,GAAGF,OAAO,GAAGC,OAAO;EAChC,MAAME,IAAI,GAAG;IACXC,IAAI,EAAEV,WAAW;IACjBC,QAAQ,EAAEA,QAAQ;IAClBC,MAAM,EAAEA;EACV,CAAC;EACD;EACA;EACA;;EAEA,MAAMS,WAAW,GAAG;IAClBC,OAAO,EAAE;MACPC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;MAC9BN,KAAK,EAAEA,KAAK;MACZC,IAAI,EAAEA,IAAI;MACVY,SAAS,EAAEX;IACb;EACF,CAAC;EAED,IAAI;IACF,MAAMY,GAAG,GAAG,MAAMC,KAAK,CAACV,MAAM,EAAE;MAC9BW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC;QACxD,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEV,IAAI,CAACC,SAAS,CAACJ,WAAW;IAClC,CAAC,CAAC;IACF,MAAMc,IAAI,GAAG,MAAMR,GAAG,CAACQ,IAAI,CAAC,CAAC;IAE7B,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;EAC1C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}