{"ast":null,"code":"var _jsxFileName = \"/Users/dongura_me/Desktop/dongurame-remind/remind/react/final-project/final-09-campick/src/components/comment/Comment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport iconDot from \"../../assets/icons/icon-dot.svg\";\nimport { deleteComment } from \"../../api/commentDeleteApi\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport { WrapComment, CommentFollowerProfileImage, WrapCommentContent, CommentFollowerName, CommentText, CommentTime, WrapCommentFollower } from \"./Comment.style\";\nimport { DarkBackground, ModalWrap, CheckModalWrap, CheckButtonWrap, CheckMsg, CheckConfirm, ModalText } from \"../modal/Modal.style\";\nimport { DotImg, ModalBtn } from \"../post/Post.style\";\nimport { DeletePostToast } from \"../toast/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Comment({\n  comment,\n  currentUsername,\n  setLender,\n  postId\n}) {\n  _s();\n  const {\n    author,\n    createdAt,\n    content\n  } = comment;\n  moment.locale(\"ko\");\n  const formatCommentTime = date => {\n    const now = moment();\n    const commentDate = moment(date);\n    if (now.diff(commentDate, \"seconds\", true) < 1) {\n      return \"조금 전\";\n    } else {\n      return commentDate.fromNow();\n    }\n  };\n  const profileLink = `/${author.accountname === currentUsername ? \"profile\" : `profile/${author.accountname}`}`;\n  const [isCommentModal, setIsCommentModal] = useState(false);\n  const [isCommentDeleteCheckModal, setIsCommentDeleteCheckModal] = useState(false);\n  const [deleteMsg, setDeleteMsg] = useState(\"\");\n  const handleCommentModalOptionClick = () => {\n    setIsCommentModal(true);\n  };\n  const handleCommentModalClose = () => {\n    setIsCommentModal(false);\n  };\n  const handleCommentDeleteClick = () => {\n    setIsCommentDeleteCheckModal(true);\n  };\n  const handleCommentDeleteCheckModalClose = () => {\n    setIsCommentDeleteCheckModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WrapComment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: profileLink,\n        children: /*#__PURE__*/_jsxDEV(CommentFollowerProfileImage, {\n          src: author.image,\n          alt: `${author.username}의 프로필 이미지입니다.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WrapCommentContent, {\n        children: [/*#__PURE__*/_jsxDEV(WrapCommentFollower, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: profileLink,\n            children: /*#__PURE__*/_jsxDEV(CommentFollowerName, {\n              children: author.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CommentTime, {\n            children: formatCommentTime(createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentText, {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), currentUsername === author.accountname && /*#__PURE__*/_jsxDEV(ModalBtn, {\n        onClick: handleCommentModalOptionClick,\n        children: /*#__PURE__*/_jsxDEV(DotImg, {\n          src: iconDot,\n          alt: \"\\uC544\\uC774\\uCF58 \\uBC84\\uD2BC \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), isCommentModal && /*#__PURE__*/_jsxDEV(DarkBackground, {\n        onClick: handleCommentModalClose,\n        children: /*#__PURE__*/_jsxDEV(ModalWrap, {\n          children: /*#__PURE__*/_jsxDEV(ModalText, {\n            onClick: handleCommentDeleteClick,\n            children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), isCommentDeleteCheckModal && /*#__PURE__*/_jsxDEV(DarkBackground, {\n        onClick: handleCommentDeleteCheckModalClose,\n        children: /*#__PURE__*/_jsxDEV(CheckModalWrap, {\n          children: [/*#__PURE__*/_jsxDEV(CheckMsg, {\n            children: \"\\uB313\\uAE00\\uC744 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC5B4\\uC694?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CheckButtonWrap, {\n            children: [/*#__PURE__*/_jsxDEV(CheckConfirm, {\n              onClick: handleCommentDeleteCheckModalClose,\n              children: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CheckConfirm\n            // check\n            , {\n              onClick: async () => {\n                setDeleteMsg(await deleteComment(postId, comment.id));\n                setTimeout(async () => {\n                  setLender(pre => !pre);\n                }, 500);\n              },\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeletePostToast, {\n      deleteMsg: deleteMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Comment, \"3EGDRKQpu6JF76FRKxK/vktZomI=\");\n_c = Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","Link","iconDot","deleteComment","moment","WrapComment","CommentFollowerProfileImage","WrapCommentContent","CommentFollowerName","CommentText","CommentTime","WrapCommentFollower","DarkBackground","ModalWrap","CheckModalWrap","CheckButtonWrap","CheckMsg","CheckConfirm","ModalText","DotImg","ModalBtn","DeletePostToast","jsxDEV","_jsxDEV","Fragment","_Fragment","Comment","comment","currentUsername","setLender","postId","_s","author","createdAt","content","locale","formatCommentTime","date","now","commentDate","diff","fromNow","profileLink","accountname","isCommentModal","setIsCommentModal","isCommentDeleteCheckModal","setIsCommentDeleteCheckModal","deleteMsg","setDeleteMsg","handleCommentModalOptionClick","handleCommentModalClose","handleCommentDeleteClick","handleCommentDeleteCheckModalClose","children","to","src","image","alt","username","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","setTimeout","pre","_c","$RefreshReg$"],"sources":["/Users/dongura_me/Desktop/dongurame-remind/remind/react/final-project/final-09-campick/src/components/comment/Comment.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport iconDot from \"../../assets/icons/icon-dot.svg\";\nimport { deleteComment } from \"../../api/commentDeleteApi\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport {\n  WrapComment,\n  CommentFollowerProfileImage,\n  WrapCommentContent,\n  CommentFollowerName,\n  CommentText,\n  CommentTime,\n  WrapCommentFollower,\n} from \"./Comment.style\";\nimport {\n  DarkBackground,\n  ModalWrap,\n  CheckModalWrap,\n  CheckButtonWrap,\n  CheckMsg,\n  CheckConfirm,\n  ModalText,\n} from \"../modal/Modal.style\";\nimport { DotImg, ModalBtn } from \"../post/Post.style\";\nimport { DeletePostToast } from \"../toast/Toast\";\n\nexport default function Comment({\n  comment,\n  currentUsername,\n  setLender,\n  postId,\n}) {\n  const { author, createdAt, content } = comment;\n  moment.locale(\"ko\");\n\n  const formatCommentTime = date => {\n    const now = moment();\n    const commentDate = moment(date);\n\n    if (now.diff(commentDate, \"seconds\", true) < 1) {\n      return \"조금 전\";\n    } else {\n      return commentDate.fromNow();\n    }\n  };\n\n  const profileLink = `/${\n    author.accountname === currentUsername\n      ? \"profile\"\n      : `profile/${author.accountname}`\n  }`;\n\n  const [isCommentModal, setIsCommentModal] = useState(false);\n  const [isCommentDeleteCheckModal, setIsCommentDeleteCheckModal] =\n    useState(false);\n  const [deleteMsg, setDeleteMsg] = useState(\"\");\n  const handleCommentModalOptionClick = () => {\n    setIsCommentModal(true);\n  };\n  const handleCommentModalClose = () => {\n    setIsCommentModal(false);\n  };\n  const handleCommentDeleteClick = () => {\n    setIsCommentDeleteCheckModal(true);\n  };\n  const handleCommentDeleteCheckModalClose = () => {\n    setIsCommentDeleteCheckModal(false);\n  };\n\n  return (\n    <>\n      <WrapComment>\n        <Link to={profileLink}>\n          <CommentFollowerProfileImage\n            src={author.image}\n            alt={`${author.username}의 프로필 이미지입니다.`}\n          />\n        </Link>\n        <WrapCommentContent>\n          <WrapCommentFollower>\n            <Link to={profileLink}>\n              <CommentFollowerName>{author.username}</CommentFollowerName>\n            </Link>\n            <CommentTime>{formatCommentTime(createdAt)}</CommentTime>\n          </WrapCommentFollower>\n          <CommentText>{content}</CommentText>\n        </WrapCommentContent>\n\n        {currentUsername === author.accountname && (\n          <ModalBtn onClick={handleCommentModalOptionClick}>\n            <DotImg src={iconDot} alt=\"아이콘 버튼 \" />\n          </ModalBtn>\n        )}\n\n        {isCommentModal && (\n          <DarkBackground onClick={handleCommentModalClose}>\n            <ModalWrap>\n              <ModalText onClick={handleCommentDeleteClick}>삭제하기</ModalText>\n            </ModalWrap>\n          </DarkBackground>\n        )}\n        {isCommentDeleteCheckModal && (\n          <DarkBackground onClick={handleCommentDeleteCheckModalClose}>\n            <CheckModalWrap>\n              <CheckMsg>댓글을 삭제하시겠어요?</CheckMsg>\n              <CheckButtonWrap>\n                <CheckConfirm onClick={handleCommentDeleteCheckModalClose}>\n                  취소\n                </CheckConfirm>\n                <CheckConfirm\n                  // check\n                  onClick={async () => {\n                    setDeleteMsg(await deleteComment(postId, comment.id));\n                    setTimeout(async () => {\n                      setLender(pre => !pre);\n                    }, 500);\n                  }}\n                >\n                  삭제\n                </CheckConfirm>\n              </CheckButtonWrap>\n            </CheckModalWrap>\n          </DarkBackground>\n        )}\n      </WrapComment>\n      <DeletePostToast deleteMsg={deleteMsg} />\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}