{"ast":null,"code":"var _jsxFileName = \"/Users/dongura_me/Desktop/dongurame-remind/remind/react/final-project/final-09-campick/src/components/kakaomap/KakaomapMain.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KakaoMapMain = ({\n  address,\n  mapheight\n}) => {\n  _s();\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n    const options = {\n      center: new window.kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3\n    };\n    const map = new window.kakao.maps.Map(container, options);\n\n    // 주소-좌표 변환 객체를 생성합니다\n    const geocoder = new window.kakao.maps.services.Geocoder();\n\n    // 주소로 좌표를 검색합니다\n    geocoder.addressSearch(address, (result, status) => {\n      // 정상적으로 검색이 완료됐으면\n      if (status === window.kakao.maps.services.Status.OK) {\n        const coords = new window.kakao.maps.LatLng(result[0].y, result[0].x);\n\n        // 결과값으로 받은 위치를 마커로 표시합니다\n        new window.kakao.maps.Marker({\n          map: map,\n          position: coords\n        });\n\n        // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n        map.setCenter(coords);\n      }\n    });\n  }, [address, mapheight]);\n  return /*#__PURE__*/_jsxDEV(MapWrapper, {\n    id: \"map\",\n    height: mapheight.toString()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n_s(KakaoMapMain, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KakaoMapMain;\nexport default KakaoMapMain;\nconst MapWrapper = styled.div`\n  width: 100%;\n  height: ${({\n  height\n}) => `${height}px`};\n  //height : 100%;\n`;\n_c2 = MapWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"KakaoMapMain\");\n$RefreshReg$(_c2, \"MapWrapper\");","map":{"version":3,"names":["React","useEffect","styled","jsxDEV","_jsxDEV","KakaoMapMain","address","mapheight","_s","container","document","getElementById","options","center","window","kakao","maps","LatLng","level","map","Map","geocoder","services","Geocoder","addressSearch","result","status","Status","OK","coords","y","x","Marker","position","setCenter","MapWrapper","id","height","toString","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["/Users/dongura_me/Desktop/dongurame-remind/remind/react/final-project/final-09-campick/src/components/kakaomap/KakaomapMain.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst KakaoMapMain = ({ address, mapheight }) => {\n  useEffect(() => {\n    const container = document.getElementById(\"map\");\n    const options = {\n      center: new window.kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3,\n    };\n\n    const map = new window.kakao.maps.Map(container, options);\n\n    // 주소-좌표 변환 객체를 생성합니다\n    const geocoder = new window.kakao.maps.services.Geocoder();\n\n    // 주소로 좌표를 검색합니다\n    geocoder.addressSearch(address, (result, status) => {\n      // 정상적으로 검색이 완료됐으면\n      if (status === window.kakao.maps.services.Status.OK) {\n        const coords = new window.kakao.maps.LatLng(result[0].y, result[0].x);\n\n        // 결과값으로 받은 위치를 마커로 표시합니다\n        new window.kakao.maps.Marker({\n          map: map,\n          position: coords,\n        });\n\n        // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n        map.setCenter(coords);\n      }\n    });\n  }, [address, mapheight]);\n\n  return <MapWrapper id=\"map\" height={mapheight.toString()} />;\n};\n\nexport default KakaoMapMain;\n\nconst MapWrapper = styled.div`\n  width: 100%;\n  height: ${({ height }) => `${height}px`};\n  //height : 100%;\n`;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC/CP,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;IAChD,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,IAAIC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC;MAC3DC,KAAK,EAAE;IACT,CAAC;IAED,MAAMC,GAAG,GAAG,IAAIL,MAAM,CAACC,KAAK,CAACC,IAAI,CAACI,GAAG,CAACX,SAAS,EAAEG,OAAO,CAAC;;IAEzD;IACA,MAAMS,QAAQ,GAAG,IAAIP,MAAM,CAACC,KAAK,CAACC,IAAI,CAACM,QAAQ,CAACC,QAAQ,CAAC,CAAC;;IAE1D;IACAF,QAAQ,CAACG,aAAa,CAAClB,OAAO,EAAE,CAACmB,MAAM,EAAEC,MAAM,KAAK;MAClD;MACA,IAAIA,MAAM,KAAKZ,MAAM,CAACC,KAAK,CAACC,IAAI,CAACM,QAAQ,CAACK,MAAM,CAACC,EAAE,EAAE;QACnD,MAAMC,MAAM,GAAG,IAAIf,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC,CAACK,CAAC,EAAEL,MAAM,CAAC,CAAC,CAAC,CAACM,CAAC,CAAC;;QAErE;QACA,IAAIjB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACgB,MAAM,CAAC;UAC3Bb,GAAG,EAAEA,GAAG;UACRc,QAAQ,EAAEJ;QACZ,CAAC,CAAC;;QAEF;QACAV,GAAG,CAACe,SAAS,CAACL,MAAM,CAAC;MACvB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACvB,OAAO,EAAEC,SAAS,CAAC,CAAC;EAExB,oBAAOH,OAAA,CAAC+B,UAAU;IAACC,EAAE,EAAC,KAAK;IAACC,MAAM,EAAE9B,SAAS,CAAC+B,QAAQ,CAAC;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D,CAAC;AAAClC,EAAA,CAhCIH,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAkClB,eAAeA,YAAY;AAE3B,MAAM8B,UAAU,GAAGjC,MAAM,CAAC0C,GAAI;AAC9B;AACA,YAAY,CAAC;EAAEP;AAAO,CAAC,KAAM,GAAEA,MAAO,IAAI;AAC1C;AACA,CAAC;AAACQ,GAAA,GAJIV,UAAU;AAAA,IAAAQ,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}